name: Build / Test On PR

on: [pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: Check for errors
        # use wasm32 target so that if we have included wasm-incompatible
        # dependencies, it will result in CI failure
        run: cargo check --locked --target wasm32-unknown-unknown
        env:
          RUST_BACKTRACE: 1

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Run tests
        run: cargo test --lib --locked --tests
        env:
          RUST_BACKTRACE: 1

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: clippy

      - name: Run clippy
        # use nightly toolchain so that we get all the latest linter features
        run: cargo +nightly clippy --tests -- -D warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt

      - name: Run format
        # use nightly toolchain so that we get all the latest formatting features
        run: cargo +nightly fmt --check
